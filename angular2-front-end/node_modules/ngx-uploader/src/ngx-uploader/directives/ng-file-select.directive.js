"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var ngx_uploader_class_1 = require("../classes/ngx-uploader.class");
var NgFileSelectDirective = (function () {
    function NgFileSelectDirective(elementRef) {
        var _this = this;
        this.elementRef = elementRef;
        this.fileListener = function () {
            _this.upload.handleFiles(_this.el.files);
        };
        this.upload = new ngx_uploader_class_1.NgUploaderService();
        this.uploadOutput = new core_1.EventEmitter();
    }
    NgFileSelectDirective.prototype.ngOnInit = function () {
        var _this = this;
        this.el = this.elementRef.nativeElement;
        this.el.addEventListener('change', this.fileListener, false);
        this.upload.serviceEvents.subscribe(function (event) {
            _this.uploadOutput.emit(event);
        });
        if (this.uploadInput instanceof core_1.EventEmitter) {
            this.upload.initInputEvents(this.uploadInput);
        }
    };
    NgFileSelectDirective.prototype.ngOnDestroy = function () {
        this.el.removeEventListener('change', this.fileListener, false);
        if (this.uploadInput) {
            this.uploadInput.unsubscribe();
        }
    };
    return NgFileSelectDirective;
}());
__decorate([
    core_1.Input()
], NgFileSelectDirective.prototype, "uploadInput", void 0);
__decorate([
    core_1.Output()
], NgFileSelectDirective.prototype, "uploadOutput", void 0);
NgFileSelectDirective = __decorate([
    core_1.Directive({
        selector: '[ngFileSelect]'
    })
], NgFileSelectDirective);
exports.NgFileSelectDirective = NgFileSelectDirective;
