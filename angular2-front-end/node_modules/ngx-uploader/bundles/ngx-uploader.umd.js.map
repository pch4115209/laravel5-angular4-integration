{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ngx-uploader.umd.js","webpack:///webpack/bootstrap e0b04039b896c9a84e2c","webpack:///external \"@angular/core\"","webpack:///./lib/src/ngx-uploader/classes/ngx-uploader.class.js","webpack:///./lib/src/ngx-uploader/directives/ng-file-drop.directive.js","webpack:///./lib/src/ngx-uploader/directives/ng-file-select.directive.js","webpack:///./lib/src/ngx-uploader/module/ngx-uploader.module.js","webpack:///external \"rxjs/Observable\"","webpack:///external \"rxjs/add/observable/from\"","webpack:///external \"rxjs/add/operator/mergeAll\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","humanizeBytes","bytes","sizes","Math","floor","log","parseFloat","pow","toFixed","UploadStatus","NgUploaderService","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__","__WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_from__","__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_mergeAll__","files","serviceEvents","uploads","handleFiles","_this","fileList","_a","push","apply","map","file","uploadFile","fileIndex","id","generateId","size","type","progress","status","Queue","data","percentage","speed","speedHuman","startTime","endTime","lastModifiedDate","emit","nativeFile","sub","instance","initInputEvents","input","subscribe","event","uploadFileIndex","findIndex","upload","concurrency","Number","POSITIVE_INFINITY","from","mergeAll","id_1","index","unsubscribe","Canceled","forEach","splice","length","observer","url","method","headers","reader","FileReader","xhr","XMLHttpRequest","time","Date","getTime","addEventListener","e","lengthComputable","round","loaded","total","diff","Uploading","next","error","complete","onreadystatechange","readyState","DONE","speedAverage","Done","response","JSON","parse","open","withCredentials","form","FormData","uploadFile_1","item","uploadIndex","append","fieldName","keys","key","setRequestHeader","send","abort","random","toString","substring","NgFileDropDirective","__WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__","__decorate","decorators","target","desc","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","__metadata","k","v","metadata","elementRef","stopEvent","stopPropagation","preventDefault","uploadOutput","ngOnInit","el","nativeElement","uploadInput","ngOnDestroy","onDrop","dataTransfer","onDragOver","onDragLeave","Function","Event","selector","NgFileSelectDirective","fileListener","removeEventListener","NgUploaderModule","__WEBPACK_IMPORTED_MODULE_1__directives_ng_file_drop_directive__","__WEBPACK_IMPORTED_MODULE_2__directives_ng_file_select_directive__","declarations","__WEBPACK_IMPORTED_MODULE_0__src_ngx_uploader_module_ngx_uploader_module__","__WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__","__WEBPACK_IMPORTED_MODULE_2__src_ngx_uploader_directives_ng_file_select_directive__","__WEBPACK_IMPORTED_MODULE_3__src_ngx_uploader_directives_ng_file_drop_directive__"],"mappings":"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","file":"ngx-uploader.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"rxjs/Observable\"), require(\"rxjs/add/observable/from\"), require(\"rxjs/add/operator/mergeAll\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ngx-uploader\", [\"@angular/core\", \"rxjs/Observable\", \"rxjs/add/observable/from\", \"rxjs/add/operator/mergeAll\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngx-uploader\"] = factory(require(\"@angular/core\"), require(\"rxjs/Observable\"), require(\"rxjs/add/observable/from\"), require(\"rxjs/add/operator/mergeAll\"));\n\telse\n\t\troot[\"ngx-uploader\"] = factory(root[\"@angular/core\"], root[\"rxjs/Observable\"], root[\"rxjs/add/observable/from\"], root[\"rxjs/add/operator/mergeAll\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"rxjs/Observable\"), require(\"rxjs/add/observable/from\"), require(\"rxjs/add/operator/mergeAll\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ngx-uploader\", [\"@angular/core\", \"rxjs/Observable\", \"rxjs/add/observable/from\", \"rxjs/add/operator/mergeAll\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngx-uploader\"] = factory(require(\"@angular/core\"), require(\"rxjs/Observable\"), require(\"rxjs/add/observable/from\"), require(\"rxjs/add/operator/mergeAll\"));\n\telse\n\t\troot[\"ngx-uploader\"] = factory(root[\"@angular/core\"], root[\"rxjs/Observable\"], root[\"rxjs/add/observable/from\"], root[\"rxjs/add/operator/mergeAll\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return UploadStatus; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = humanizeBytes;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NgUploaderService; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_from__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_from___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_from__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_mergeAll__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_mergeAll___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_mergeAll__);\n\n\n\n\nvar UploadStatus;\n(function (UploadStatus) {\n    UploadStatus[UploadStatus[\"Queue\"] = 0] = \"Queue\";\n    UploadStatus[UploadStatus[\"Uploading\"] = 1] = \"Uploading\";\n    UploadStatus[UploadStatus[\"Done\"] = 2] = \"Done\";\n    UploadStatus[UploadStatus[\"Canceled\"] = 3] = \"Canceled\";\n})(UploadStatus || (UploadStatus = {}));\nfunction humanizeBytes(bytes) {\n    if (bytes === 0) {\n        return '0 Byte';\n    }\n    var k = 1024;\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n    var i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\nvar NgUploaderService = (function () {\n    function NgUploaderService() {\n        this.files = [];\n        this.serviceEvents = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.uploads = [];\n    }\n    NgUploaderService.prototype.handleFiles = function (files) {\n        var _this = this;\n        this.fileList = files;\n        (_a = this.files).push.apply(_a, [].map.call(files, function (file, i) {\n            var uploadFile = {\n                fileIndex: i,\n                id: _this.generateId(),\n                name: file.name,\n                size: file.size,\n                type: file.type,\n                progress: {\n                    status: UploadStatus.Queue,\n                    data: {\n                        percentage: 0,\n                        speed: null,\n                        speedHuman: null,\n                        startTime: null,\n                        endTime: null\n                    }\n                },\n                lastModifiedDate: file.lastModifiedDate\n            };\n            _this.serviceEvents.emit({ type: 'addedToQueue', file: uploadFile, nativeFile: file });\n            _this.uploads.push({ file: uploadFile, sub: { instance: null } });\n            return uploadFile;\n        }));\n        this.serviceEvents.emit({ type: 'allAddedToQueue' });\n        var _a;\n    };\n    NgUploaderService.prototype.initInputEvents = function (input) {\n        var _this = this;\n        input.subscribe(function (event) {\n            switch (event.type) {\n                case 'uploadFile':\n                    var uploadFileIndex = _this.uploads.findIndex(function (upload) { return upload.file === event.file; });\n                    if (uploadFileIndex !== -1) {\n                        _this.uploads[uploadFileIndex].sub.instance = _this.uploadFile(event.file, event).subscribe(function (data) {\n                            _this.serviceEvents.emit(data);\n                        });\n                    }\n                    break;\n                case 'uploadAll':\n                    var concurrency = event.concurrency > 0 ? event.concurrency : Number.POSITIVE_INFINITY;\n                    __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"].from(_this.files.map(function (file) { return _this.uploadFile(file, event); }))\n                        .mergeAll(concurrency)\n                        .subscribe(function (data) { return _this.serviceEvents.emit(data); });\n                    break;\n                case 'cancel':\n                    var id_1 = event.id || null;\n                    if (!id_1) {\n                        return;\n                    }\n                    var index = _this.uploads.findIndex(function (upload) { return upload.file.id === id_1; });\n                    if (index !== -1) {\n                        if (_this.uploads[index].sub && _this.uploads[index].sub.instance) {\n                            _this.uploads[index].sub.instance.unsubscribe();\n                        }\n                        _this.serviceEvents.emit({ type: 'cancelled', file: _this.uploads[index].file });\n                        _this.uploads[index].file.progress.status = UploadStatus.Canceled;\n                    }\n                    break;\n                case 'cancelAll':\n                    _this.uploads.forEach(function (upload) {\n                        if (upload.sub && upload.sub.instance) {\n                            upload.sub.instance.unsubscribe();\n                        }\n                        upload.file.progress.status = UploadStatus.Canceled;\n                        _this.serviceEvents.emit({ type: 'cancelled', file: upload.file });\n                    });\n                    break;\n                case 'remove':\n                    if (!event.id) {\n                        return;\n                    }\n                    var i = _this.files.findIndex(function (file) { return file.id === event.id; });\n                    if (i !== -1) {\n                        var file = _this.files[i];\n                        _this.files.splice(i, 1);\n                        _this.serviceEvents.emit({ type: 'removed', file: file });\n                    }\n                    break;\n                case 'removeAll':\n                    if (_this.files.length) {\n                        _this.files = [];\n                        _this.serviceEvents.emit({ type: 'removedAll' });\n                    }\n                    break;\n            }\n        });\n    };\n    NgUploaderService.prototype.uploadFile = function (file, event) {\n        var _this = this;\n        return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"](function (observer) {\n            var url = event.url;\n            var method = event.method || 'POST';\n            var data = event.data || {};\n            var headers = event.headers || {};\n            var reader = new FileReader();\n            var xhr = new XMLHttpRequest();\n            var time = new Date().getTime();\n            var speed = 0;\n            xhr.upload.addEventListener('progress', function (e) {\n                if (e.lengthComputable) {\n                    var percentage = Math.round((e.loaded * 100) / e.total);\n                    var diff = new Date().getTime() - time;\n                    speed = Math.round(e.loaded / diff * 1000);\n                    file.progress = {\n                        status: UploadStatus.Uploading,\n                        data: {\n                            percentage: percentage,\n                            speed: speed,\n                            speedHuman: humanizeBytes(speed) + \"/s\",\n                            startTime: file.progress.data.startTime || new Date().getTime(),\n                            endTime: null\n                        }\n                    };\n                    observer.next({ type: 'uploading', file: file });\n                }\n            }, false);\n            xhr.upload.addEventListener('error', function (e) {\n                observer.error(e);\n                observer.complete();\n            });\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    var speedAverage = Math.round(file.size / (new Date().getTime() - file.progress.data.startTime) * 1000);\n                    file.progress = {\n                        status: UploadStatus.Done,\n                        data: {\n                            percentage: 100,\n                            speed: speedAverage,\n                            speedHuman: humanizeBytes(speedAverage) + \"/s\",\n                            startTime: file.progress.data.startTime,\n                            endTime: new Date().getTime()\n                        }\n                    };\n                    try {\n                        file.response = JSON.parse(xhr.response);\n                    }\n                    catch (e) {\n                        file.response = xhr.response;\n                    }\n                    observer.next({ type: 'done', file: file });\n                    observer.complete();\n                }\n            };\n            xhr.open(method, url, true);\n            xhr.withCredentials = event.withCredentials ? true : false;\n            var form = new FormData();\n            try {\n                var uploadFile_1 = _this.fileList.item(file.fileIndex);\n                var uploadIndex = _this.uploads.findIndex(function (upload) { return upload.file.size === uploadFile_1.size; });\n                if (_this.uploads[uploadIndex].file.progress.status === UploadStatus.Canceled) {\n                    observer.complete();\n                }\n                form.append(event.fieldName || 'file', uploadFile_1, uploadFile_1.name);\n                Object.keys(data).forEach(function (key) { return form.append(key, data[key]); });\n                Object.keys(headers).forEach(function (key) { return xhr.setRequestHeader(key, headers[key]); });\n                _this.serviceEvents.emit({ type: 'start', file: file });\n                xhr.send(form);\n            }\n            catch (e) {\n                observer.complete();\n            }\n            return function () {\n                xhr.abort();\n                reader.abort();\n            };\n        });\n    };\n    NgUploaderService.prototype.generateId = function () {\n        return Math.random().toString(36).substring(7);\n    };\n    return NgUploaderService;\n}());\n\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgFileDropDirective; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__ = __webpack_require__(1);\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar NgFileDropDirective = (function () {\n    function NgFileDropDirective(elementRef) {\n        this.elementRef = elementRef;\n        this.stopEvent = function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        };\n        this.upload = new __WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__[\"c\" /* NgUploaderService */]();\n        this.uploadOutput = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    NgFileDropDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        this.el = this.elementRef.nativeElement;\n        this.upload.serviceEvents.subscribe(function (event) {\n            _this.uploadOutput.emit(event);\n        });\n        if (this.uploadInput instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]) {\n            this.upload.initInputEvents(this.uploadInput);\n        }\n        this.el.addEventListener('drop', this.stopEvent, false);\n        this.el.addEventListener('dragenter', this.stopEvent, false);\n        this.el.addEventListener('dragover', this.stopEvent, false);\n    };\n    NgFileDropDirective.prototype.ngOnDestroy = function () {\n        if (this.uploadInput) {\n            this.uploadInput.unsubscribe();\n        }\n    };\n    NgFileDropDirective.prototype.onDrop = function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        var event = { type: 'drop' };\n        this.uploadOutput.emit(event);\n        this.upload.handleFiles(e.dataTransfer.files);\n    };\n    NgFileDropDirective.prototype.onDragOver = function (e) {\n        if (!e) {\n            return;\n        }\n        var event = { type: 'dragOver' };\n        this.uploadOutput.emit(event);\n    };\n    NgFileDropDirective.prototype.onDragLeave = function (e) {\n        if (!e) {\n            return;\n        }\n        var event = { type: 'dragOut' };\n        this.uploadOutput.emit(event);\n    };\n    return NgFileDropDirective;\n}());\n__decorate([\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"])(),\n    __metadata(\"design:type\", __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"])\n], NgFileDropDirective.prototype, \"uploadInput\", void 0);\n__decorate([\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"])(),\n    __metadata(\"design:type\", __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"])\n], NgFileDropDirective.prototype, \"uploadOutput\", void 0);\n__decorate([\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostListener\"])('drop', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], NgFileDropDirective.prototype, \"onDrop\", null);\n__decorate([\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostListener\"])('dragover', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Event]),\n    __metadata(\"design:returntype\", void 0)\n], NgFileDropDirective.prototype, \"onDragOver\", null);\n__decorate([\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostListener\"])('dragleave', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Event]),\n    __metadata(\"design:returntype\", void 0)\n], NgFileDropDirective.prototype, \"onDragLeave\", null);\nNgFileDropDirective = __decorate([\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"])({\n        selector: '[ngFileDrop]'\n    }),\n    __metadata(\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"]])\n], NgFileDropDirective);\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgFileSelectDirective; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__ = __webpack_require__(1);\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar NgFileSelectDirective = (function () {\n    function NgFileSelectDirective(elementRef) {\n        var _this = this;\n        this.elementRef = elementRef;\n        this.fileListener = function () {\n            _this.upload.handleFiles(_this.el.files);\n        };\n        this.upload = new __WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__[\"c\" /* NgUploaderService */]();\n        this.uploadOutput = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    NgFileSelectDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        this.el = this.elementRef.nativeElement;\n        this.el.addEventListener('change', this.fileListener, false);\n        this.upload.serviceEvents.subscribe(function (event) {\n            _this.uploadOutput.emit(event);\n        });\n        if (this.uploadInput instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]) {\n            this.upload.initInputEvents(this.uploadInput);\n        }\n    };\n    NgFileSelectDirective.prototype.ngOnDestroy = function () {\n        this.el.removeEventListener('change', this.fileListener, false);\n        if (this.uploadInput) {\n            this.uploadInput.unsubscribe();\n        }\n    };\n    return NgFileSelectDirective;\n}());\n__decorate([\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"])(),\n    __metadata(\"design:type\", __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"])\n], NgFileSelectDirective.prototype, \"uploadInput\", void 0);\n__decorate([\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"])(),\n    __metadata(\"design:type\", __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"])\n], NgFileSelectDirective.prototype, \"uploadOutput\", void 0);\nNgFileSelectDirective = __decorate([\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"])({\n        selector: '[ngFileSelect]'\n    }),\n    __metadata(\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"]])\n], NgFileSelectDirective);\n\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgUploaderModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__directives_ng_file_drop_directive__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_ng_file_select_directive__ = __webpack_require__(3);\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\nvar NgUploaderModule = (function () {\n    function NgUploaderModule() {\n    }\n    return NgUploaderModule;\n}());\nNgUploaderModule = __decorate([\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"])({\n        declarations: [\n            __WEBPACK_IMPORTED_MODULE_2__directives_ng_file_select_directive__[\"a\" /* NgFileSelectDirective */],\n            __WEBPACK_IMPORTED_MODULE_1__directives_ng_file_drop_directive__[\"a\" /* NgFileDropDirective */]\n        ],\n        exports: [\n            __WEBPACK_IMPORTED_MODULE_2__directives_ng_file_select_directive__[\"a\" /* NgFileSelectDirective */],\n            __WEBPACK_IMPORTED_MODULE_1__directives_ng_file_drop_directive__[\"a\" /* NgFileDropDirective */]\n        ]\n    })\n], NgUploaderModule);\n\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_ngx_uploader_module_ngx_uploader_module__ = __webpack_require__(4);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NgUploaderModule\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_ngx_uploader_module_ngx_uploader_module__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__ = __webpack_require__(1);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"UploadStatus\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"humanizeBytes\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NgUploaderService\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__[\"c\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_ngx_uploader_directives_ng_file_select_directive__ = __webpack_require__(3);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NgFileSelectDirective\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_ngx_uploader_directives_ng_file_select_directive__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_ngx_uploader_directives_ng_file_drop_directive__ = __webpack_require__(2);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NgFileDropDirective\", function() { return __WEBPACK_IMPORTED_MODULE_3__src_ngx_uploader_directives_ng_file_drop_directive__[\"a\"]; });\n\n\n\n\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// ngx-uploader.umd.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e0b04039b896c9a84e2c","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 0\n// module chunks = 0","import { EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/mergeAll';\nexport var UploadStatus;\n(function (UploadStatus) {\n    UploadStatus[UploadStatus[\"Queue\"] = 0] = \"Queue\";\n    UploadStatus[UploadStatus[\"Uploading\"] = 1] = \"Uploading\";\n    UploadStatus[UploadStatus[\"Done\"] = 2] = \"Done\";\n    UploadStatus[UploadStatus[\"Canceled\"] = 3] = \"Canceled\";\n})(UploadStatus || (UploadStatus = {}));\nexport function humanizeBytes(bytes) {\n    if (bytes === 0) {\n        return '0 Byte';\n    }\n    var k = 1024;\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n    var i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\nvar NgUploaderService = (function () {\n    function NgUploaderService() {\n        this.files = [];\n        this.serviceEvents = new EventEmitter();\n        this.uploads = [];\n    }\n    NgUploaderService.prototype.handleFiles = function (files) {\n        var _this = this;\n        this.fileList = files;\n        (_a = this.files).push.apply(_a, [].map.call(files, function (file, i) {\n            var uploadFile = {\n                fileIndex: i,\n                id: _this.generateId(),\n                name: file.name,\n                size: file.size,\n                type: file.type,\n                progress: {\n                    status: UploadStatus.Queue,\n                    data: {\n                        percentage: 0,\n                        speed: null,\n                        speedHuman: null,\n                        startTime: null,\n                        endTime: null\n                    }\n                },\n                lastModifiedDate: file.lastModifiedDate\n            };\n            _this.serviceEvents.emit({ type: 'addedToQueue', file: uploadFile, nativeFile: file });\n            _this.uploads.push({ file: uploadFile, sub: { instance: null } });\n            return uploadFile;\n        }));\n        this.serviceEvents.emit({ type: 'allAddedToQueue' });\n        var _a;\n    };\n    NgUploaderService.prototype.initInputEvents = function (input) {\n        var _this = this;\n        input.subscribe(function (event) {\n            switch (event.type) {\n                case 'uploadFile':\n                    var uploadFileIndex = _this.uploads.findIndex(function (upload) { return upload.file === event.file; });\n                    if (uploadFileIndex !== -1) {\n                        _this.uploads[uploadFileIndex].sub.instance = _this.uploadFile(event.file, event).subscribe(function (data) {\n                            _this.serviceEvents.emit(data);\n                        });\n                    }\n                    break;\n                case 'uploadAll':\n                    var concurrency = event.concurrency > 0 ? event.concurrency : Number.POSITIVE_INFINITY;\n                    Observable.from(_this.files.map(function (file) { return _this.uploadFile(file, event); }))\n                        .mergeAll(concurrency)\n                        .subscribe(function (data) { return _this.serviceEvents.emit(data); });\n                    break;\n                case 'cancel':\n                    var id_1 = event.id || null;\n                    if (!id_1) {\n                        return;\n                    }\n                    var index = _this.uploads.findIndex(function (upload) { return upload.file.id === id_1; });\n                    if (index !== -1) {\n                        if (_this.uploads[index].sub && _this.uploads[index].sub.instance) {\n                            _this.uploads[index].sub.instance.unsubscribe();\n                        }\n                        _this.serviceEvents.emit({ type: 'cancelled', file: _this.uploads[index].file });\n                        _this.uploads[index].file.progress.status = UploadStatus.Canceled;\n                    }\n                    break;\n                case 'cancelAll':\n                    _this.uploads.forEach(function (upload) {\n                        if (upload.sub && upload.sub.instance) {\n                            upload.sub.instance.unsubscribe();\n                        }\n                        upload.file.progress.status = UploadStatus.Canceled;\n                        _this.serviceEvents.emit({ type: 'cancelled', file: upload.file });\n                    });\n                    break;\n                case 'remove':\n                    if (!event.id) {\n                        return;\n                    }\n                    var i = _this.files.findIndex(function (file) { return file.id === event.id; });\n                    if (i !== -1) {\n                        var file = _this.files[i];\n                        _this.files.splice(i, 1);\n                        _this.serviceEvents.emit({ type: 'removed', file: file });\n                    }\n                    break;\n                case 'removeAll':\n                    if (_this.files.length) {\n                        _this.files = [];\n                        _this.serviceEvents.emit({ type: 'removedAll' });\n                    }\n                    break;\n            }\n        });\n    };\n    NgUploaderService.prototype.uploadFile = function (file, event) {\n        var _this = this;\n        return new Observable(function (observer) {\n            var url = event.url;\n            var method = event.method || 'POST';\n            var data = event.data || {};\n            var headers = event.headers || {};\n            var reader = new FileReader();\n            var xhr = new XMLHttpRequest();\n            var time = new Date().getTime();\n            var speed = 0;\n            xhr.upload.addEventListener('progress', function (e) {\n                if (e.lengthComputable) {\n                    var percentage = Math.round((e.loaded * 100) / e.total);\n                    var diff = new Date().getTime() - time;\n                    speed = Math.round(e.loaded / diff * 1000);\n                    file.progress = {\n                        status: UploadStatus.Uploading,\n                        data: {\n                            percentage: percentage,\n                            speed: speed,\n                            speedHuman: humanizeBytes(speed) + \"/s\",\n                            startTime: file.progress.data.startTime || new Date().getTime(),\n                            endTime: null\n                        }\n                    };\n                    observer.next({ type: 'uploading', file: file });\n                }\n            }, false);\n            xhr.upload.addEventListener('error', function (e) {\n                observer.error(e);\n                observer.complete();\n            });\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    var speedAverage = Math.round(file.size / (new Date().getTime() - file.progress.data.startTime) * 1000);\n                    file.progress = {\n                        status: UploadStatus.Done,\n                        data: {\n                            percentage: 100,\n                            speed: speedAverage,\n                            speedHuman: humanizeBytes(speedAverage) + \"/s\",\n                            startTime: file.progress.data.startTime,\n                            endTime: new Date().getTime()\n                        }\n                    };\n                    try {\n                        file.response = JSON.parse(xhr.response);\n                    }\n                    catch (e) {\n                        file.response = xhr.response;\n                    }\n                    observer.next({ type: 'done', file: file });\n                    observer.complete();\n                }\n            };\n            xhr.open(method, url, true);\n            xhr.withCredentials = event.withCredentials ? true : false;\n            var form = new FormData();\n            try {\n                var uploadFile_1 = _this.fileList.item(file.fileIndex);\n                var uploadIndex = _this.uploads.findIndex(function (upload) { return upload.file.size === uploadFile_1.size; });\n                if (_this.uploads[uploadIndex].file.progress.status === UploadStatus.Canceled) {\n                    observer.complete();\n                }\n                form.append(event.fieldName || 'file', uploadFile_1, uploadFile_1.name);\n                Object.keys(data).forEach(function (key) { return form.append(key, data[key]); });\n                Object.keys(headers).forEach(function (key) { return xhr.setRequestHeader(key, headers[key]); });\n                _this.serviceEvents.emit({ type: 'start', file: file });\n                xhr.send(form);\n            }\n            catch (e) {\n                observer.complete();\n            }\n            return function () {\n                xhr.abort();\n                reader.abort();\n            };\n        });\n    };\n    NgUploaderService.prototype.generateId = function () {\n        return Math.random().toString(36).substring(7);\n    };\n    return NgUploaderService;\n}());\nexport { NgUploaderService };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/src/ngx-uploader/classes/ngx-uploader.class.js\n// module id = 1\n// module chunks = 0","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Directive, ElementRef, EventEmitter, Input, Output, HostListener } from '@angular/core';\nimport { NgUploaderService } from '../classes/ngx-uploader.class';\nvar NgFileDropDirective = (function () {\n    function NgFileDropDirective(elementRef) {\n        this.elementRef = elementRef;\n        this.stopEvent = function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        };\n        this.upload = new NgUploaderService();\n        this.uploadOutput = new EventEmitter();\n    }\n    NgFileDropDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        this.el = this.elementRef.nativeElement;\n        this.upload.serviceEvents.subscribe(function (event) {\n            _this.uploadOutput.emit(event);\n        });\n        if (this.uploadInput instanceof EventEmitter) {\n            this.upload.initInputEvents(this.uploadInput);\n        }\n        this.el.addEventListener('drop', this.stopEvent, false);\n        this.el.addEventListener('dragenter', this.stopEvent, false);\n        this.el.addEventListener('dragover', this.stopEvent, false);\n    };\n    NgFileDropDirective.prototype.ngOnDestroy = function () {\n        if (this.uploadInput) {\n            this.uploadInput.unsubscribe();\n        }\n    };\n    NgFileDropDirective.prototype.onDrop = function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        var event = { type: 'drop' };\n        this.uploadOutput.emit(event);\n        this.upload.handleFiles(e.dataTransfer.files);\n    };\n    NgFileDropDirective.prototype.onDragOver = function (e) {\n        if (!e) {\n            return;\n        }\n        var event = { type: 'dragOver' };\n        this.uploadOutput.emit(event);\n    };\n    NgFileDropDirective.prototype.onDragLeave = function (e) {\n        if (!e) {\n            return;\n        }\n        var event = { type: 'dragOut' };\n        this.uploadOutput.emit(event);\n    };\n    return NgFileDropDirective;\n}());\n__decorate([\n    Input(),\n    __metadata(\"design:type\", EventEmitter)\n], NgFileDropDirective.prototype, \"uploadInput\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], NgFileDropDirective.prototype, \"uploadOutput\", void 0);\n__decorate([\n    HostListener('drop', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], NgFileDropDirective.prototype, \"onDrop\", null);\n__decorate([\n    HostListener('dragover', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Event]),\n    __metadata(\"design:returntype\", void 0)\n], NgFileDropDirective.prototype, \"onDragOver\", null);\n__decorate([\n    HostListener('dragleave', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Event]),\n    __metadata(\"design:returntype\", void 0)\n], NgFileDropDirective.prototype, \"onDragLeave\", null);\nNgFileDropDirective = __decorate([\n    Directive({\n        selector: '[ngFileDrop]'\n    }),\n    __metadata(\"design:paramtypes\", [ElementRef])\n], NgFileDropDirective);\nexport { NgFileDropDirective };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/src/ngx-uploader/directives/ng-file-drop.directive.js\n// module id = 2\n// module chunks = 0","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Directive, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { NgUploaderService } from '../classes/ngx-uploader.class';\nvar NgFileSelectDirective = (function () {\n    function NgFileSelectDirective(elementRef) {\n        var _this = this;\n        this.elementRef = elementRef;\n        this.fileListener = function () {\n            _this.upload.handleFiles(_this.el.files);\n        };\n        this.upload = new NgUploaderService();\n        this.uploadOutput = new EventEmitter();\n    }\n    NgFileSelectDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        this.el = this.elementRef.nativeElement;\n        this.el.addEventListener('change', this.fileListener, false);\n        this.upload.serviceEvents.subscribe(function (event) {\n            _this.uploadOutput.emit(event);\n        });\n        if (this.uploadInput instanceof EventEmitter) {\n            this.upload.initInputEvents(this.uploadInput);\n        }\n    };\n    NgFileSelectDirective.prototype.ngOnDestroy = function () {\n        this.el.removeEventListener('change', this.fileListener, false);\n        if (this.uploadInput) {\n            this.uploadInput.unsubscribe();\n        }\n    };\n    return NgFileSelectDirective;\n}());\n__decorate([\n    Input(),\n    __metadata(\"design:type\", EventEmitter)\n], NgFileSelectDirective.prototype, \"uploadInput\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], NgFileSelectDirective.prototype, \"uploadOutput\", void 0);\nNgFileSelectDirective = __decorate([\n    Directive({\n        selector: '[ngFileSelect]'\n    }),\n    __metadata(\"design:paramtypes\", [ElementRef])\n], NgFileSelectDirective);\nexport { NgFileSelectDirective };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/src/ngx-uploader/directives/ng-file-select.directive.js\n// module id = 3\n// module chunks = 0","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule } from '@angular/core';\nimport { NgFileDropDirective } from '../directives/ng-file-drop.directive';\nimport { NgFileSelectDirective } from '../directives/ng-file-select.directive';\nvar NgUploaderModule = (function () {\n    function NgUploaderModule() {\n    }\n    return NgUploaderModule;\n}());\nNgUploaderModule = __decorate([\n    NgModule({\n        declarations: [\n            NgFileSelectDirective,\n            NgFileDropDirective\n        ],\n        exports: [\n            NgFileSelectDirective,\n            NgFileDropDirective\n        ]\n    })\n], NgUploaderModule);\nexport { NgUploaderModule };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/src/ngx-uploader/module/ngx-uploader.module.js\n// module id = 4\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Observable\"\n// module id = 6\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/observable/from\"\n// module id = 7\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/operator/mergeAll\"\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}